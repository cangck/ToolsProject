Android研发复习大纲
java基础复习
android基础复习
android启动流程复习
android常用库复习
androidJNI复习
android插件化复习
android性能优化
java虚拟机
单元测试场用的库
持续集成软件:
Jenkins，Travis 和 Buildbot
协作工具:
Slack，IRC，HipChat，Jabber
代码审查服务
Gerrit，GitHub，GitLab，Review Board）


android系统特性
android常用支持库的使用
android架构模式
设计模式
常用算法：对二叉树的各种遍历、循环和递归、查找、排序、二叉树查找、归并排序和快速排序
数据结构:链表、树、栈、队列和哈希表等数据结构
android网络基础
android音视频编解码
android音视频网络协议
java消息队列
android不同版本新特性
androidRxjava
android Kitlion
android网络协议和相关的库

手机验证流程
数据结构


书籍:
Effective C++
C++ Primer
Inside C++ Object Model
The C++ Programming Language




=====================================
有目标、有耐心、有持久力
数据结构
算法分析
http://zhedahht.blog.163.com

面试流程：
初级应聘者：考察算法和数据结构
高级程序员:关注专业技能和项目经验

对公司的了解：
公司的近况、项目情况、对所应聘的工作真的很有热情、最备好相关合适的问题问面试官

编码流程:
1.思考清楚再开始编码
2.良好的diam命名和缩减对齐习惯
3.能够单元测试
4.准备好几个问题

面试的三个环节:
考察内容:
    1.编程能力和技术功底
    2.沟通能力和学习能力
考核标准:
    基础知识扎实、能否写出高质量的代码、思路是否清晰、是否有优化效率的能力、学习能力、沟通能力在内的综合能力是否优秀

1.行为面试：项目经验：
    1.简短的项目背景
    2.完成的任务
    3.未完成任务做了哪些工作
    4.自己的贡献
    对简历和离职原因的说明:
        1.关键词:参与、负责、了解、熟悉、精通
        2.为什么要跳槽：避免四个问题1.老板太苛刻、2.同时太能相处、3.加班太频繁、4.工资太低
        正确回答：对现在的工作没有挑战，想找更具有挑战的公司

2.技术面试
    1.扎实的基础(基础考察的三种新手)
        1.编程语言、数据结构和算法
        2.对关键字的理解
        3.数据结构:数组、字符串、链表、树、栈及队列(查找--顺序查找、二分查找、哈希表查找和二叉排序树查找、排序)
    2.高质量的代码：健壮性和鲁棒性(边界条件、特殊输入NULL，空字符串)
        1.容错处理
        2.处理特殊的输入
        3.边界检查
        4.对输入参数的检查
        5.处理错误和异常处理方式

        一下三个方面保证写出高质量的代码:
            规范代码:
                1.清晰的书写
                2.清晰的布局
                3.合理的命名

            代码完整性:
                三个方面保证完整性:
                    1.功能测试
                    2.边界测试
                    3.负面测试
                三种方式处理错误:
                    1.函数用返回值来告诉调用者是否出错
                    2.当发生错误是设置一个全局变量
                    3.使用异常
            代码鲁棒性:程序能够判断输入是否合乎规范要求，并对不合要求的输入予以合理的处理
                    1.容错性
                    2.防御性编程习惯


    3.清晰的思路
        1.解决复杂的问题->3步:画图能使抽象问题形象化、举例使抽象问题具体化、分解使负责问题简单化
    4.优化效率(时间复杂度和内存的消耗)(如何分析时间/空间复杂度)
    5.有限的综合能力

3.提问
    1.公司成立时间、主要业务、职位要求等


